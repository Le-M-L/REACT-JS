[{"D:\\workSpace\\react\\REACT-JS\\src\\index.js":"1","D:\\workSpace\\react\\REACT-JS\\src\\App.js":"2","D:\\workSpace\\react\\REACT-JS\\src\\api\\intercept.js":"3","D:\\workSpace\\react\\REACT-JS\\src\\routes\\index.js":"4","D:\\workSpace\\react\\REACT-JS\\src\\common\\lazyLoad.js":"5","D:\\workSpace\\react\\REACT-JS\\src\\pages\\PageNotFound\\index.jsx":"6","D:\\workSpace\\react\\REACT-JS\\src\\pages\\Login\\index.jsx":"7"},{"size":1103,"mtime":1610800054955,"results":"8","hashOfConfig":"9"},{"size":1136,"mtime":1610799973866,"results":"10","hashOfConfig":"9"},{"size":4502,"mtime":1610951694904,"results":"11","hashOfConfig":"9"},{"size":295,"mtime":1610800830600,"results":"12","hashOfConfig":"9"},{"size":607,"mtime":1610951631570,"results":"13","hashOfConfig":"9"},{"size":422,"mtime":1611144896365,"results":"14","hashOfConfig":"9"},{"size":3391,"mtime":1611191995761,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"fqg2th",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"D:\\workSpace\\react\\REACT-JS\\src\\index.js",[],["33","34"],"D:\\workSpace\\react\\REACT-JS\\src\\App.js",["35","36"],"\r\nimport React, { Component } from 'react'\r\n\r\nimport { Button } from 'antd';\r\nimport { $get } from '@/api/intercept.js';\r\nimport \"./App.less\"\r\n// console.log(request)\r\n// let data = {\r\n//   pageSize: 8,\r\n//   pageNow: 1,\r\n//   reportPersonId: '7a330a258ccc47858ae7f6f39d6030af',\r\n//   reportPersonDeptId: 'dc2eb4a4397547f084d1ab6c25ffe687',\r\n//   listType: 1,\r\n//   eventState: '1,6,10,11,12',\r\n//   deptLevel: 7,\r\n//   timestamp: '1610622147000',\r\n//   nonce: 'BD36sjBKHEcJpAtXsJ2HWJGRy3RzPxds',\r\n//   dId: 'dc2eb4a4397547f084d1ab6c25ffe687',\r\n//   roleIds: '9ef64a3545fe4afe96d6fd37020a10ed'\r\n// }\r\n// $get('/UnifyEvent/list', data)\r\n//   .then(res => {\r\n//     console.log(res)\r\n//   })\r\nfunction handleClick(params) {\r\n  window.less.modifyVars(//更换主题颜色要这么写\r\n    {\r\n      '@primary-color': '#e64e14',\r\n      '@btn-primary-bg': '#5d72cc',\r\n    }\r\n  )\r\n    .then(() => { console.log('success') })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={handleClick}>Button</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\workSpace\\react\\REACT-JS\\src\\api\\intercept.js",[],"D:\\workSpace\\react\\REACT-JS\\src\\routes\\index.js",[],"D:\\workSpace\\react\\REACT-JS\\src\\common\\lazyLoad.js",[],"D:\\workSpace\\react\\REACT-JS\\src\\pages\\PageNotFound\\index.jsx",[],"D:\\workSpace\\react\\REACT-JS\\src\\pages\\Login\\index.jsx",["37","38","39"],"import React, { useState, useEffect } from \"react\";\r\nimport { Form, Input, Button, Checkbox, Spin } from \"antd\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport ReactCanvasNest from 'react-canvas-nest';\r\nconst rules = {\r\n    username: [\r\n        {\r\n            required: true,\r\n            message: \"请输入用户名\",\r\n        },\r\n    ],\r\n    password: [\r\n        {\r\n            required: true,\r\n            message: \"请输入密码\",\r\n        },\r\n    ],\r\n};\r\n//表单组件\r\nconst FormDom = () => {\r\n    //验证成功\r\n    const onFinish = (values) => {\r\n        console.log(\"Success:\", values);\r\n    };\r\n    //验证失败\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log(\"Failed:\", errorInfo);\r\n    };\r\n\r\n    return (\r\n        <Form name=\"basic\" initialValues={{ remember: true }} onFinish={onFinish} onFinishFailed={onFinishFailed}>\r\n            <Form.Item name=\"username\" rules={rules.username}>\r\n                <Input prefix={<UserOutlined style={{ fontSize: \"16px\", color: \"#08c\" }} />} placeholder=\"Username\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"password\" rules={rules.password}>\r\n                <Input\r\n                    prefix={<LockOutlined style={{ fontSize: \"16px\", color: \"#08c\" }} />}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                    <Checkbox style={{ color: '#0ab5e4' }}>保存密码</Checkbox>\r\n                </Form.Item>\r\n\r\n                <a style={style.forget} href=\"\">\r\n                    忘记密码\r\n                </a>\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n                <Button type=\"primary\" style={style.submit} htmlType=\"submit\">\r\n                    登 录\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst Login = () => {\r\n    let loading = false;\r\n    return (\r\n        <div style={{ width:'100%',height:'100%'}} className=\"content--canvas\">\r\n            <ReactCanvasNest className='canvasNest' config={{ pointColor: ' 255, 255, 255 ' }} style={{ width:'100%',height:'100%'}} />\r\n            <div style={style.loginBox}>\r\n                <Spin spinning={loading}>\r\n                    <h1 style={{ textAlign: \"center\", color: '#0ab5e4' }}>\r\n                        <img\r\n                            style={{ height: \"44px\", marginRight: 16 }}\r\n                            alt=\"logo\"\r\n                            src=\"https://gw.alipayobjects.com/zos/rmsportal/KDpgvguMpGfqaHPjicRK.svg\"\r\n                        />\r\n                    Ant Design\r\n                </h1>\r\n                    <div style={{ marginTop: 12, textAlign: \"center\", marginBottom: 20, color: '#0ab5e4' }}>Ant Design</div>\r\n                    {/* 登录页表单 */}\r\n                    <FormDom />\r\n                </Spin>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst style = {\r\n    loginBox: {\r\n        width: \"300px\",\r\n        position: \"fixed\",\r\n        left: \"50%\",\r\n        top: \"30%\",\r\n        transform: \"translate(-50%,-50%)\",\r\n        zIndex: '11',\r\n        color: '#0ab5e4 !important'\r\n    },\r\n    submit: {\r\n        width: \"100%\",\r\n    },\r\n    forget: {\r\n        float: \"right\",\r\n    },\r\n};\r\n\r\nexport default Login;\r\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":17,"nodeType":"46","messageId":"47","endLine":2,"endColumn":26},{"ruleId":"44","severity":1,"message":"48","line":5,"column":10,"nodeType":"46","messageId":"47","endLine":5,"endColumn":14},{"ruleId":"44","severity":1,"message":"49","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"44","severity":1,"message":"50","line":1,"column":27,"nodeType":"46","messageId":"47","endLine":1,"endColumn":36},{"ruleId":"51","severity":1,"message":"52","line":49,"column":17,"nodeType":"53","endLine":49,"endColumn":49},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'$get' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]